/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java

import org.gradle.plugins.ide.eclipse.model.Library
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	project {
		//if you don't like the name Gradle has chosen
		name = project.name

		//if you want to specify the Eclipse project's comment
		comment = 'Base - Trunk'

		//if you want to append a build command with parameters:
		//buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
		buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'

		//if you want to assign natures in a groovy fashion:
		natures = ['org.eclipse.buildship.core.gradleprojectnature', 'org.eclipse.jdt.core.javanature', 'net.sf.eclipsecs.core.CheckstyleNature']

		linkedResource name: 'properties_zentral', type: '2', locationUri: 'C:/Entwicklung/properties'
	}

	classpath {
		downloadSources = true
		downloadJavadoc = false


		//Änderung Ausgabeverzeichnisse
		defaultOutputDir = file('classes/main/java')

		file {
			whenMerged {
				//change DefaultOutputfolder
				def src = entries.find { it.path == 'source' }
				src.output = "classes/main/java"

				def resources = entries.find { it.path == 'src/main/resources' }
				resources.output = "classes/main/resources"

				def testsrc = entries.find { it.path == 'test/java' }
				testsrc.output = "classes/test/java"

				def testres = entries.find { it.path == 'test/resources' }
				testres.output = "classes/test/resources"

				//Delete all lib entries
				//entries.removeAll { it.kind == 'lib' }

				//Add properties entries
				entries += new Library(fileReference('properties_zentral'))
				entries += new Library(fileReference('properties_projekt'))
			}
		}

		containers  'org.eclipse.buildship.core.gradleclasspathcontainer', 'org.eclipse.jdt.junit.JUNIT_CONTAINER/4'
	}
}


//Die von gradle vorgegebenen Pfade werden auf die css-Standardpfade umgebogen
sourceSets {
	main {
		java {
			srcDirs "source"
		}

		resources {
			srcDirs "src/main/resources"
		}

		output.classesDir = 'classes/main/java'
	}
	test    {
		java {
			srcDirs "test/java"
		}
		resources {
			srcDirs "test/resources"
		}

		runtimeClasspath += files("lib/properties")
		output.classesDir = 'classes/test/java'
	}
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

